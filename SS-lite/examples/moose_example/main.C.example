
/**** This file is a modification of a file in the MOOSE framework.
 * See below for MOOSE licensing info. 
 *
 * Here, we show how to register the ss-lite solver in a moose application. It 
 * is a two step process. First, include the PetscInterface.h header and second,
 * call the PetscCoupler::CreateSolverSelectorKSP() function. 
 *
 * Every native moose application has a main.C file in its topmost src directory. That 
 * is where you will make these changes 
 *
 *
 * i.e moose/modules/solid_mechanics/src/main.C  (this file is a copy of that main.C file)
 * or  moose/tutorials/<tutorial>/src/main.C  


//* This file is part of the MOOSE framework
//* https://www.mooseframework.org
//*
//* All rights reserved, see COPYRIGHT for full restrictions
//* https://github.com/idaholab/moose/blob/master/COPYRIGHT
//*
//* Licensed under LGPL 2.1, please see LICENSE for details
//* https://www.gnu.org/licenses/lgpl-2.1.html



#include "SolidMechanicsTestApp.h"
#include "MooseInit.h"
#include "Moose.h"
#include "MooseApp.h"
#include "AppFactory.h"


/****************************************************************/
/**** Step 1: Add the include statement 
 
#include "PetscInterface.h"

/***************************************************************/


// Create a performance log
PerfLog Moose::perf_log("SolidMechanics");

// Begin the main program.
int
main(int argc, char * argv[])
{
  // Initialize MPI, solvers and MOOSE
  MooseInit init(argc, argv);

  /****************************************************************/
  /**** Step 2: Register the ksp solver  
  
       PetscCoupler::CreateSolverSelectorKSP();
  
  /***************************************************************/

  // Register this application's MooseApp and any it depends on
  SolidMechanicsTestApp::registerApps();

  // Create an instance of the application and store it in a smart pointer for easy cleanup
  std::shared_ptr<MooseApp> app = AppFactory::createAppShared("SolidMechanicsTestApp", argc, argv);

  app->setCheckUnusedFlag(true);
  app->setErrorOverridden();

  // Execute the application
  app->run();

  return 0;
}
