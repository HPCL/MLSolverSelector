 Feature extraction for Petsc Matricies

Hi,

1. Installation: 
     a) export PETSC_DIR =<path-to-petsc>
     b) make

2. Running a single example
     a)./matrix_free.a 
           (i) Simulates feature extraction for Bratu, prints features to stdout
           (ii) Edit the size of the "matrix" in the petsc_feature_extract_mf.C file
     b)./matrix_binary.a <path_to_petsc_binary_matrix> <output_file>
           (i) loads petsc matrix and extracts features using matrix-free methods. 
           (ii) should work fine in parallel but the results will differ with processor 
                counts ( i still need to figure out petscs internal dof numbering system ) 
           (iii) prints data to file outputfile

3. Running multiple matricies
    a) Open up ./batch_extract.sh and set the matrix_directory and matrix extension and output_file
    b) chmod u+x ./batch_extract.sh 
    c) Running ./batch_extract will run feature extract on all matrices in that directory with the given
       extension. 


4. For different feature extraction scripts are provided. These are included at the top of the
petsc_feature_extraction.C code to choose the feature set. To change the feature set just comment out
the correct include. 

   a) *_full.h is the full feature set
   b) *_reduced_1.h is reduced feature set 1
   c) *_reduced_2.h is reduced feature set 2

   d) *_batch.h is the full feature set where all mat-vecs are performed at one time. This is memory heavy
      so no good for testing. For standard matrices, a matrix-matrix is usually faster than multiple matrix
      vector multiplications. For matrix-free, it probably isn't any different because matrix-matrix is implemented
      as $n$ matrix-vectors anyway. 
  
   e) TODO -- Need to put in flags for symmetry. 
   f) TODO -- Need to put in flags for bandwidth so we can reduce the number of mat-vecs. 

