 Feature extraction for Petsc Matricies

1. Whereever possible this code will mimic that given in the matrix_free_properties.m file 

2. To compile. 
        a) export PETSC_DIR=<path_to_petsc>  or edit PETSC_DIR in Makefile 
        b) make

3. matrix_binary: This exe loads a petsc binary matrix and extracts the featuers. In that case, feature
extraction is completed using the matrix-free approach. This could be optimized so we extract the values directly 
which would make the sampling approach viable for all matrix types.

4. matrix_free: This exe creates a Petsc Shell matrix that mimics the Bratu example. 



A few things to note.

1. The feature set can be modified by changing the Macros in PetscFeatureSetExtraction.h and re-compiling. This
is somewhat of a pain, but I believe the Macro based approach will help performance wise.

2. Petsc does provide a function for extracting the matrix diagonal, but it is not stored in all cases. So, this
code assumes we don't have it and instead uses the samples for the matrix based approach. 

3. For a number of reasons, petsc uses a processor based numbering system. This is oppossed to the standard "natural"
numbering system used in the matlab functions. Changing the numbering doesn't really do much, it just rearranges the 
rows in the matrix, so features like the one-norm and the frobenius norm will stay the same. Some things that do change are
    a) the bandwidth and average diagonal distance will change with processor count. 
    b) the columns that we sample actually change. I am still trying to work out a solution for finding edge vs middle columns and rows when the petsc numbering is used 

    c) In the matrix-free example, the petsc numbering and natural numbering co-incide whenever the processor count is odd. So, the features extracted are identical for p = 1,3,5,7,.... . If the processor count is even, then Petsc distributes using blocks and so, the Petsc numbering and natural numbering differ. 


